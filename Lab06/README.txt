Kyle Jeffrey

Summary: 
This lab introduced event driven hardware programming. Using an ISR(Interrupt Service Routine) to run code at specific polling rates, event flags were generated at specified intervals to alert the program of events occuring. When these flags were generated by the ISR, the main() of the program would catch these events and react with actions, then clearing the event flags after being used. This interplay between event flags and event reaction encompasses event driven programming. 

Approach: 
The lab did slowly increased the difficulty of each part, introducing new peripherals one at a time. Thus, approaching the lab didn't require as much forethought as it otherwise would in a different scenario. Once I understood the concept of event flags and their interaction with the main code loop, I generally understood the layout of each part of the lab. 

Conclusion: 
In total, the lab probably took me 10 or so hours. Large chunks of time were spent stuck on small issues that I couldn't wrap my head around, for instance in part 4 with the buttonCheckEvents() function. I was pulling my hair out trying to understand the correct implementation of generating event flags and how the test harness should interact. After browsing piazza i realized the layout was simply a more complicated version of the previous parts, and the test harness needed to catch each event and reset the event flags. Good lab all in all.